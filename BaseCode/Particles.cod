//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame
{
    float3  gEyePosW;                   // Offset:    0, size:   12
}

cbuffer cbPerObject
{
    float4x4 gWVP;                      // Offset:    0, size:   64
}

cbuffer cbFixed
{
    float2  gTexC[4] = { 0, 1, 0, 0, 1, 1, 1, 0 };// Offset:    0, size:   56
}

//
// 2 local object(s)
//
Texture2D gDiffuseMap;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 TestTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.CenterW.x; v0.y <- vin.CenterW.y; v0.z <- vin.CenterW.z; 
                //   v1.x <- vin.SizeW.x; v1.y <- vin.SizeW.y; 
                //   o1.x <- <VS return value>.SizeW.x; o1.y <- <VS return value>.SizeW.y; 
                //   o0.x <- <VS return value>.CenterW.x; o0.y <- <VS return value>.CenterW.y; o0.z <- <VS return value>.CenterW.z
                //
                #line 62 "C:\Users\deathgodsato\Documents\GitHub\The-Game-that-Shall....you-get-the-idea\BaseCode\Particles.fx"
                mov r0.xyz, v0.xyzx  // r0.x <- vout.CenterW.x; r0.y <- vout.CenterW.y; r0.z <- vout.CenterW.z
                mov r1.xy, v1.xyxx  // r1.x <- vout.SizeW.x; r1.y <- vout.SizeW.y
                mov o0.xyz, r0.xyzx
                mov o1.xy, r1.xyxx
                ret 
                // Approximately 5 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float3 gEyePosW;                   // Offset:    0 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWVP;                     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gTexC[4];                   // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                // SV_PrimitiveID           0    N/A   primID   PRIMID    uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                // SV_PrimitiveID           0   x           4   PRIMID    uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_constantbuffer cb1[4], immediateIndexed
                dcl_constantbuffer cb2[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output_sgv o4.x, primitive_id
                dcl_maxout 4
                //
                // Initial variable locations:
                //   vPrim <- primID; 
                //   m0 <- triStream; 
                //   v[0][0].x <- gin[0].CenterW.x; v[0][0].y <- gin[0].CenterW.y; v[0][0].z <- gin[0].CenterW.z; 
                //   v[0][1].x <- gin[0].SizeW.x; v[0][1].y <- gin[0].SizeW.y; 
                //   x0 <- v
                //
                #line 72 "C:\Users\deathgodsato\Documents\GitHub\The-Game-that-Shall....you-get-the-idea\BaseCode\Particles.fx"
                mov r0.xyz, -v[0][0].xyzx
                add r0.xyz, r0.xyzx, cb0[0].xyzx  // r0.x <- look.x; r0.y <- look.y; r0.z <- look.z
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                itof r1.xyz, l(0, 0, 1, 0)
                mul r2.xyz, r0.zxyz, r1.zxyz
                mul r1.xyz, r0.yzxy, r1.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, r2.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // r1.x <- right.x; r1.y <- right.y; r1.z <- right.z
                mul r2.xyz, r0.yzxy, r1.zxyz
                mul r3.xyz, r0.zxyz, r1.yzxy
                mov r3.xyz, -r3.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- up.x; r2.y <- up.y; r2.z <- up.z
                mul r0.w, l(0.500000), v[0][1].x  // r0.w <- halfWidth
                mul r1.w, l(0.500000), v[0][1].y  // r1.w <- halfHeight
                
                #line 81
                mul r3.xyz, r1.xyzx, r0.wwww
                add r3.xyz, r3.xyzx, v[0][0].xyzx
                mul r4.xyz, r2.xyzx, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r3.xyz, r3.xyzx, r4.xyzx
                mov r3.w, l(1.000000)
                mov x0[0].xyzw, r3.xyzw
                mul r3.xyz, r1.xyzx, r0.wwww
                add r3.xyz, r3.xyzx, v[0][0].xyzx
                mul r4.xyz, r2.xyzx, r1.wwww
                add r3.xyz, r3.xyzx, r4.xyzx
                mov r3.w, l(1.000000)
                mov x0[1].xyzw, r3.xyzw
                mul r3.xyz, r1.xyzx, r0.wwww
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, v[0][0].xyzx
                mul r4.xyz, r2.xyzx, r1.wwww
                mov r4.xyz, -r4.xyzx
                add r3.xyz, r3.xyzx, r4.xyzx
                mov r3.w, l(1.000000)
                mov x0[2].xyzw, r3.xyzw
                mul r1.xyz, r1.xyzx, r0.wwww
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, v[0][0].xyzx
                mul r2.xyz, r2.xyzx, r1.wwww
                add r1.xyz, r1.xyzx, r2.xyzx
                mov r1.w, l(1.000000)
                mov x0[3].xyzw, r1.xyzw
                
                #line 94
                mov r1.xyzw, x0[0].xyzw
                dp4 r2.x, r1.xyzw, cb1[0].xyzw  // r2.x <- gout.PosH.x
                dp4 r2.y, r1.xyzw, cb1[1].xyzw  // r2.y <- gout.PosH.y
                dp4 r2.z, r1.xyzw, cb1[2].xyzw  // r2.z <- gout.PosH.z
                dp4 r2.w, r1.xyzw, cb1[3].xyzw  // r2.w <- gout.PosH.w
                mov r1.xyz, x0[0].xyzx  // r1.x <- gout.PosW.x; r1.y <- gout.PosW.y; r1.z <- gout.PosW.z
                mov r3.xy, cb2[0].xyxx  // r3.x <- gout.Tex.x; r3.y <- gout.Tex.y
                mov r0.w, vPrim  // r0.w <- gout.PrimID
                mov r0.xyz, r0.xyzx  // r0.x <- gout.NormalW.x; r0.y <- gout.NormalW.y; r0.z <- gout.NormalW.z
                mov o0.xyzw, r2.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r0.xyzx
                mov o3.xy, r3.xyxx
                mov o4.x, r0.w
                emit_stream m0
                
                #line 94
                mov r1.xyzw, x0[1].xyzw
                dp4 r2.x, r1.xyzw, cb1[0].xyzw
                dp4 r2.y, r1.xyzw, cb1[1].xyzw
                dp4 r2.z, r1.xyzw, cb1[2].xyzw
                dp4 r2.w, r1.xyzw, cb1[3].xyzw
                mov r1.xyz, x0[1].xyzx  // r1.x <- gout.PosW.x; r1.y <- gout.PosW.y; r1.z <- gout.PosW.z
                mov r3.xy, cb2[1].xyxx
                mov r0.w, vPrim
                
                #line 100
                mov o0.xyzw, r2.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r0.xyzx
                mov o3.xy, r3.xyxx
                mov o4.x, r0.w
                emit_stream m0
                
                #line 94
                mov r1.xyzw, x0[2].xyzw
                dp4 r2.x, r1.xyzw, cb1[0].xyzw
                dp4 r2.y, r1.xyzw, cb1[1].xyzw
                dp4 r2.z, r1.xyzw, cb1[2].xyzw
                dp4 r2.w, r1.xyzw, cb1[3].xyzw
                mov r1.xyz, x0[2].xyzx  // r1.x <- gout.PosW.x; r1.y <- gout.PosW.y; r1.z <- gout.PosW.z
                mov r3.xy, cb2[2].xyxx
                mov r0.w, vPrim
                
                #line 100
                mov o0.xyzw, r2.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r0.xyzx
                mov o3.xy, r3.xyxx
                mov o4.x, r0.w
                emit_stream m0
                
                #line 94
                mov r1.xyzw, x0[3].xyzw
                dp4 r2.x, r1.xyzw, cb1[0].xyzw
                dp4 r2.y, r1.xyzw, cb1[1].xyzw
                dp4 r2.z, r1.xyzw, cb1[2].xyzw
                dp4 r2.w, r1.xyzw, cb1[3].xyzw
                mov r1.xyz, x0[3].xyzx  // r1.x <- gout.PosW.x; r1.y <- gout.PosW.y; r1.z <- gout.PosW.z
                mov r3.xy, cb2[3].xyxx
                mov r0.w, vPrim
                
                #line 100
                mov o0.xyzw, r2.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r0.xyzx
                mov o3.xy, r3.xyxx
                mov o4.x, r0.w
                emit_stream m0
                ret 
                // Approximately 105 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float       
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                // SV_PrimitiveID           0   x           4   PRIMID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.Tex.x; v3.y <- pin.Tex.y; 
                //   v4.x <- pin.PrimID; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 122 "C:\Users\deathgodsato\Documents\GitHub\The-Game-that-Shall....you-get-the-idea\BaseCode\Particles.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // r0.x <- texColour.x; r0.y <- texColour.y; r0.z <- texColour.z; r0.w <- texColour.w
                
                #line 132
                mov r0.xyz, r0.xyzx  // r0.x <- retColour.x; r0.y <- retColour.y; r0.z <- retColour.z
                
                #line 135
                mov r0.w, r0.w  // r0.w <- retColour.w
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

}

